# https://starship.rs/config
# Warning: This config does not include keys that have an unset value
# format = '$all'
add_newline     = true
command_timeout = 500
scan_timeout    = 60

# Prompt Format
# {\ [ ](fg:#dfdfdf)
format = """
$memory_usage\
$time\
$hostname\
$shlvl\
$battery\
$custom\
$directory\
$git_branch\
$cmd_duration\
$line_break\
$vcsh\
$git_commit\
$git_state\
$git_status\
$docker_context\
$cmake\
$python\
$rust\
$jobs\
$status\
$username\
$shell\
$character"""

[battery]
charging_symbol    = "  "
disabled           = false
discharging_symbol = "ﴊ "
empty_symbol       = "  "
format             = '[$symbol$percentage]($style) '
full_symbol        = "  "
unknown_symbol     = " "

[[battery.display]]
style     = "bold red"
threshold = 10

[[battery.display]]
style     = "bold yellow"
threshold = 30

[[battery.display]]
style     = "dimmed yellow"
threshold = 50

[[battery.display]]
style     = "green"
threshold = 80

[character]
disabled       = false
error_symbol   = '[✖ ](red)'
format         = '$symbol '
success_symbol = '[➜ ](dimmed green)'
vicmd_symbol   = '[ⅵ ](bold white)'

[cmake]
detect_extensions = []
detect_files      = [ 'CMakeLists.txt', 'CMakeCache.txt' ]
detect_folders    = []
disabled          = true
format            = 'via [$symbol($version )]($style)'
style             = 'bold blue'
symbol            = '△ '
version_format    = 'v${raw}'

[cmd_duration]
# Wait 45-minutes before reporting
disabled           = false
format             = '([\( 🕘 $duration \)]($style) )'
min_time           = 2700000
min_time_to_notify = 45000
show_milliseconds  = false
show_notifications = false
style              = 'yellow'

[directory]
disabled                  = false
fish_style_pwd_dir_length = 0
format                    = '([   ](fg:#877c56)[ $path ]($style)[$read_only]($read_only_style))'
read_only                 = '   '
read_only_style           = 'fg:#876922'
style                     = 'fg:#1597ed underline'
truncate_to_repo          = true
truncation_length         = 4
truncation_symbol         = '  / '
use_logical_path          = true

[directory.substitutions]
"/home/james" = '[ ﮟ ](fg:#0b5c63)'

[docker_context]
detect_extensions = []
detect_files      = [ 'docker-compose.yml', 'docker-compose.yaml', 'Dockerfile' ]
detect_folders    = []
disabled          = false
format            = 'via [$symbol$context]($style) '
only_with_files   = true
style             = 'blue bold'
symbol            = '🐳 '

[env_var]
disabled = true
format   = 'with [$env_value]($style) '
style    = 'black bold dimmed'
symbol   = ''

[erlang]
detect_extensions = []
detect_files      = [ 'rebar.config', 'erlang.mk' ]
detect_folders    = []
disabled          = true
format            = 'via [$symbol($version )]($style)'
style             = 'bold red'
symbol            = ' '
version_format    = 'v${raw}'

[gcloud]
disabled = true
format   = 'on [$symbol$account(@$domain)(\($region\))]($style) '
style    = 'bold blue'
symbol   = '☁️  '

[gcloud.region_aliases]

[git_branch]
always_show_remote = true
disabled           = false
format             = '[  on $symbol $branch(:[$remote](fg:#d16970 dimmed))]($style) '
only_attached      = false
style              = 'light italic fg:#994aa1'
symbol             = ' '
truncation_length  = 9223372036854775807
truncation_symbol  = '…'

[git_commit]
commit_hash_length = 7
disabled           = false
format             = '[$hash]($style)[$tag_symbol](fg:#bdb83e) '
only_detached      = false
style              = 'underline light green'
tag_disabled       = false
tag_symbol         = '  '

[git_state]
am           = 'AM'
am_or_rebase = 'AM/REBASE'
bisect       = 'BISECTING'
cherry_pick  = 'CHERRY-PICKING'
disabled     = false
format       = '\([$state( $progress_current/$progress_total)]($style)\) '
merge        = 'MERGING'
rebase       = 'REBASING'
revert       = 'REVERTING'
style        = 'bold yellow'

[git_status]
format = '([{ [ ](fg:#dfdfdf)( - [$ahead_behind](""))( - [$all_status]("")) }](fg:grey))'
# TODO: Add Counts
ahead      = '[   \(+$count\) ](fg:#3f8a43)'
behind     = '[   \(-$count\) ](fg:#94478a)'
conflicted = '[   ](fg:#adaa5e)'
deleted    = '[  ](fg:#a37e7e)'
disabled   = false
diverged   = '[ ﲴ  \( [ﲓ  +[$ahead_count](bold fg:#4bb4d6)](fg:#49899e) | [ﲐ  -[$behind_count](bold fg:#ba3fbf)](fg:#7f3482) \)](fg:#bf9b3f)'
modified   = '[  ](yellow)'
renamed    = '[ 謹 ](fg:#949169)'
staged     = '[ ﭜ ](green)'
stashed    = '[   ](fg:#705431)'
untracked  = '[ ﬒ ](fg:#616161)'

[golang]
detect_extensions = [ 'go' ]
detect_files = [
    'go.mod',
    'go.sum',
    'glide.yaml',
    'Gopkg.yml',
    'Gopkg.lock',
    '.go-version',
]
detect_folders = [ 'Godeps' ]
disabled = true
format = 'via [$symbol($version )]($style)'
style = 'bold cyan'
symbol = '🐹 '
version_format = 'v${raw}'

[hostname]
disabled = false
format   = '[$hostname]($style) in '
ssh_only = true
style    = 'green dimmed'
trim_at  = '.'

[java]
detect_extensions = [ 'java', 'class', 'jar', 'gradle', 'clj', 'cljc' ]
detect_files = [
    'pom.xml',
    'build.gradle.kts',
    'build.sbt',
    '.java-version',
    'deps.edn',
    'project.clj',
    'build.boot',
]
detect_folders = []
disabled = true
format = 'via [$symbol($version )]($style)'
style = 'red'
symbol = ' '
version_format = 'v${raw}'

[jobs]
disabled  = false
format    = '[$symbol([ $number jobs](fg:#fcba03))]($style) '
style     = 'fg:#cc6600'
symbol    = '  '
threshold = 1

[julia]
detect_extensions = [ 'jl' ]
detect_files      = [ 'Project.toml', 'Manifest.toml' ]
detect_folders    = []
disabled          = true
format            = 'via [$symbol($version )]($style)'
style             = 'bold purple'
symbol            = 'ஃ '
version_format    = 'v${raw}'

[kotlin]
detect_extensions = [ 'kt', 'kts' ]
detect_files      = []
detect_folders    = []
disabled          = true
format            = 'via [$symbol($version )]($style)'
kotlin_binary     = 'kotlin'
style             = 'bold blue'
symbol            = '🅺 '
version_format    = 'v${raw}'

[kubernetes]
disabled = true
format   = '[$symbol$context( \($namespace\))]($style) in '
style    = 'cyan bold'
symbol   = '☸ '

[kubernetes.context_aliases]

[line_break]
disabled = false

[lua]
detect_extensions = [ 'lua' ]
detect_files      = [ '.lua-version' ]
detect_folders    = [ 'lua' ]
disabled          = false
format            = '[$symbol ~ [($version )](bold white)]($style)'
lua_binary        = 'lua'
style             = 'italic blue'
symbol            = ' Lua'
version_format    = 'v${raw}'

[memory_usage]
disabled  = false
format    = '[\[[ $ram ](fg:#eb6f09)([\($ram_pct\) ](fg:#2dd4eb))\] ](fg:#dbdbdb)'
style     = 'fg:#eb6f09'
threshold = 10

# [[memory.display]]

[nodejs]
detect_extensions = [ 'js', 'mjs', 'cjs', 'ts' ]
detect_files      = [ 'package.json', '.node-version', '.nvmrc' ]
detect_folders    = [ 'node_modules' ]
disabled          = true
format            = 'via [$symbol($version )]($style)'
not_capable_style = 'bold red'
style             = 'bold green'
symbol            = ' '
version_format    = 'v${raw}'

[package]
disabled        = true
display_private = false
format          = 'is [$symbol$version]($style) '
style           = '208 bold'
symbol          = '📦 '

[python]
detect_extensions = [ 'py' ]
detect_files = [
    'requirements.txt',
    '.python-version',
    'pyproject.toml',
    'Pipfile',
    'tox.ini',
    'setup.py',
    '__init__.py',
]
detect_folders = []
disabled = false
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
pyenv_prefix = 'pyenv '
pyenv_version_name = false
python_binary = [ 'python', 'python3', 'python2' ]
style = 'yellow bold'
symbol = '   '
version_format = 'v${raw}'

[rust]
detect_extensions = [ 'rs' ]
detect_files      = [ 'Cargo.toml' ]
detect_folders    = []
disabled          = false
format            = ' [$symbol($version )]($style)'
style             = 'red'
symbol            = ' '
version_format    = 'v${raw}'

[shell]
bash_indicator       = 'bash'
disabled             = false
elvish_indicator     = 'esh '
fish_indicator       = 'fish'
format               = '[$indicator](fg:#3eaed6)[  ](fg:#58ad39) '
ion_indicator        = 'ion '
powershell_indicator = 'psh '
tcsh_indicator       = 'tsh '
unknown_indicator    = ' ?? '
zsh_indicator        = 'zsh '

[shlvl]
disabled  = false
format    = '[$symbol$shlvl]($style) '
repeat    = false
style     = 'dimmed yellow'
symbol    = '↕️  '
threshold = 3

[singularity]
disabled = true

[status]
disabled              = true
format                = '[$symbol$status]($style) '
map_symbol            = false
not_executable_symbol = '🚫'
not_found_symbol      = '🔍'
recognize_signal_code = true
sigint_symbol         = '🧱'
signal_symbol         = '⚡'
style                 = 'bold red'
symbol                = '✖'

[time]
disabled        = false
format          = '[ [$time](fg:#ff470f underline)  ]($style) '
style           = 'fg:#d143a6'
use_12hr        = true
utc_time_offset = 'local'
#time_range = '10:30:00-20:15:00'

[username]
disabled    = false
format      = '[   ](fg:#50baa3)[$user]($style) '
show_always = true
style_root  = 'red bold underline'
style_user  = 'fg:#ff9a0d underline'

[custom]


[custom.sudo]
command     = "echo -n '!'"
description = "Displays a visual indication that the user's sudo credentials are still cached"
format      = "[$symbol$output]($style) "
style       = "bold fg:bright-red"
when        = "sudo -vn &>/dev/null"
