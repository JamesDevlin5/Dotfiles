# Better UI
set -g default-terminal xterm-256color

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows in session as they are closed
set -g renumber-windows on

# Set scrollback buffer
set -g history-limit 5000

# Stay open even if there are no active sessions
set -s exit-empty off

# History
set -g history-file ~/.tmux_history

# Prefix Key
unbind C-b
set -g prefix C-Space

# Secondary Prefix
set -g prefix2 C-a

# Setup vi-style copy/paste
bind P paste-buffer 
bind-key -T copy-mode-vi v send-keys -X begin-selection 
bind-key -T copy-mode-vi y send-keys -X copy-selection 
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Reload tmux config
unbind r
bind r source ~/.tmux.conf\; display "Tmux Config (~/.tmux.conf) Reloaded."

# Split panes easier
unbind -
unbind %
unbind '"'

bind v split-window -h -c "cd #{pane_current_path}"
bind h split-window -v -c "cd #{pane_current_path}"
bind - split-window -v
bind _ split-window -h

# pane movement to window
bind j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# mouse mode
set -g mouse on

bind m \
    set -g mouse on \; \
    display 'Mouse: ON'

bind M \
    set -g mouse off \; \
    display 'Mouse: OFF'

#bind-key v split-pane -h
#bind-key s split-pane -v

# And windows
unbind '\"'
bind '\\\'' split-window -v
bind '\"' split-window -h

# More intuitive
unbind l
#bind l display-menu -T "#[align=center]List Lookup" "sessions s list-sessions windows w list-windows panes p list-panes"

bind b list-buffers

unbind n
bind n new-window

unbind c
bind c clock-mode

unbind p
bind p display-panes

unbind q
bind q 

bind k confirm-before -p "kill-pane #P? (y/n)" kill-pane


#   # Navigate panes like vim
#   bind H select-pane -L
#   bind J select-pane -D
#   bind K select-pane -U
#   bind L select-pane -R
#   
#   bind -n C-h select-pane -L
#   bind -n C-j select-pane -D
#   bind -n C-k select-pane -U
#   bind -n C-l select-pane -R
#   
#   # Use Alt-vim keys without prefix key to switch panes
#   bind -n M-h select-pane -L
#   bind -n M-j select-pane -D 
#   bind -n M-k select-pane -U
#   bind -n M-l select-pane -R
#   
#   # Use Alt-arrow keys without prefix key to switch panes
#   bind -n M-Left select-pane -L
#   bind -n M-Right select-pane -R
#   bind -n M-Up select-pane -U
#   bind -n M-Down select-pane -D
#   
#   # Shift arrow to switch windows
#   bind -n S-Left  previous-window
#   bind -n S-Right next-window

bind -n M-j previous-window
bind -n M-k next-window


# No delay for escape key press
set -sg escape-time 0
set -sg repeat-time 600

# Locating
bind FFFF choose-tree -O time

# Make sure VI is on
set -g mode-keys vi

# Status bar
set -g status-position top


# Clock
set -g clock-mode-colour orange
set -g clock-mode-style 12

# Pane View
#set -g pane-active-border-style 
set -g pane-border-lines simple

# Normal mode -> cursor = block
# Insert mode -> cursor = line
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"



# THEME
#set -g status-bg lime
#set -g status-fg black
#set -g window-status-current-bg white
#set -g window-status-current-fg black
#set -g window-status-current-attr bold
#set -g status-interval 60
#set -g status-left-length 30

#set -g status-left '#{?client_prefix:#[fg=grey] 麗 #[default],#[fg=orange]  #[default]}[ #{session_name} ] #{W:}
#{=/10/...:window_title}
#set -g status-right '
# 
# ﲤ
# 

